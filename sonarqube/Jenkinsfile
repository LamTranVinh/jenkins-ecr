pipeline {
    agent any

    environment {
        GRADLE_USER_HOME = "${HOME}/.gradle"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Debug') {
            steps {
                sh 'pwd' // Print working directory (workspace path)
            }
        }
        stage('Build') {
            steps {
                script {
                    def myGradleContainer = docker.image('gradle:jdk8-alpine')
                    myGradleContainer.pull()
                    myGradleContainer.inside("-v ${GRADLE_USER_HOME}:/home/gradle/.gradle") {
                        sh '/opt/gradle/bin/gradle build'
                    }
                }
            }
        }

        stage('Sonar-Scanner') {
                environment {
        SONAR_LOGIN = credentials('sonarqube-scanner')
                }
            steps {
                script {
            def sonarqubeScannerHome = tool name: 'sonarqube-scanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
            sh """
                ${sonarqubeScannerHome}/bin/sonar-scanner -e -Dsonar.host.url=http://sonarqube.local:9000 -Dsonar.login=\$SONAR_LOGIN -Dsonar.projectName=gs-gradle -Dsonar.projectVersion=${env.BUILD_NUMBER} -Dsonar.projectKey=GS -Dsonar.sources=complete/src/main/ -Dsonar.tests=complete/src/test/ -Dsonar.language=java -Dsonar.java.binaries=.
            """
        }
                }

        }

        
        }
    }
