pipeline {
    agent any

    environment {
        GRADLE_USER_HOME = "${HOME}/.gradle"
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }

        stage('Build') {
            steps {
                script {
                    def myGradleContainer = docker.image('gradle:jdk8-alpine')
                    myGradleContainer.pull()
                    myGradleContainer.inside("-v ${GRADLE_USER_HOME}:/home/gradle/.gradle") {
                        sh 'cd complete && /opt/gradle/bin/gradle build'
                    }
                }
            }
        }

        stage('Sonar-Scanner') {
            steps {
                script {
                    def sonarqubeScannerHome = tool name: 'sonar-scanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                    withCredentials([string(credentialsId: 'sonarqube', variable: 'sonarLogin')]) {
                        sh "${sonarqubeScannerHome}/bin/sonar-scanner -e -Dsonar.host.url=http://sonar
