pipeline {
    agent any
    
    environment {
        GRADLE_USER_HOME = "${WORKSPACE}/.gradle"
    }
    
    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        
        stage('Build') {
            steps {
                script {
                    def gradleContainer = docker.image('gradle:jdk17')
                    gradleContainer.pull()
                    
                    // Run build using Gradle
                    gradleContainer.inside("-v ${GRADLE_USER_HOME}:/home/gradle/.gradle") {
                        sh "cd sonarqube && ./gradlew build"
                    }
                }
            }
        }
        
        stage('SonarQube Analysis') {
            steps {
                script {
                    def scannerHome = tool name: 'sonarqube-scanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                    
                    withCredentials([string(credentialsId: 'sonarqube-token', variable: 'sonarLogin')]) {
                        sh """
                            ${scannerHome}/bin/sonar-scanner -Dsonar.host.url=http://sonarqube.local:9000 \
                            -Dsonar.login=\$SONAR_LOGIN -Dsonar.projectKey=your-project-key \
                            -Dsonar.projectName=YourProjectName -Dsonar.sources=src/main/java \
                            -Dsonar.tests=src/test/java -Dsonar.language=java
                        """
                    }
                }
            }
        }
    }
}
