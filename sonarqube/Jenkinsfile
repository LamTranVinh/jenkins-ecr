pipeline {
    agent any

    environment {
        GRADLE_USER_HOME = "${HOME}/.gradle"
    }

    stages {
        stage('Setup') {
            steps {
                script {
                    def myGradleContainer = docker.image('gradle:latest')
                    myGradleContainer.pull()
                }
            }
        }

        stage('prep') {
            steps {
                checkout scm
            }
        }

        stage('build') {
            steps {
                script {
                    def myGradleContainer = docker.image('gradle:latest')
                    myGradleContainer.inside("-v ${GRADLE_USER_HOME}:/home/gradle/.gradle") {
                        sh 'cd complete && /opt/gradle/bin/gradle build'
                    }
                }
            }
        }

        stage('sonar-scanner') {
            steps {
                script {
                    def sonarqubeScannerHome = tool name: 'sonarqube-scanner', type: 'hudson.plugins.sonar.SonarRunnerInstallation'
                    withCredentials([string(credentialsId: 'sonarqube-token', variable: 'sonarLogin')]) {
                        sh """
                            ${sonarqubeScannerHome}/bin/sonar-scanner -e -Dsonar.host.url=http://sonarqube.local:9000 \
                            -Dsonar.login=\$SONAR_LOGIN -Dsonar.projectName=gs-gradle -Dsonar.projectVersion=${env.BUILD_NUMBER} \
                            -Dsonar.projectKey=GS -Dsonar.sources=complete/src/main/ -Dsonar.tests=complete/src/test/ \
                            -Dsonar.language=java -Dsonar.java.binaries=.
                        """
                    }
                }
            }
        }
    }
}
